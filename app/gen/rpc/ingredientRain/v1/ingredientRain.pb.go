// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        (unknown)
// source: rpc/ingredientRain/v1/ingredientRain.proto

package ingredientRainv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Ingredient struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Uuid        string                 `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Title       string                 `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	Description string                 `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	ImageUrl    string                 `protobuf:"bytes,5,opt,name=image_url,json=imageUrl,proto3" json:"image_url,omitempty"`
	CreatedAt   *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt   *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *Ingredient) Reset() {
	*x = Ingredient{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ingredientRain_v1_ingredientRain_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Ingredient) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ingredient) ProtoMessage() {}

func (x *Ingredient) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ingredientRain_v1_ingredientRain_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ingredient.ProtoReflect.Descriptor instead.
func (*Ingredient) Descriptor() ([]byte, []int) {
	return file_rpc_ingredientRain_v1_ingredientRain_proto_rawDescGZIP(), []int{0}
}

func (x *Ingredient) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Ingredient) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *Ingredient) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Ingredient) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Ingredient) GetImageUrl() string {
	if x != nil {
		return x.ImageUrl
	}
	return ""
}

func (x *Ingredient) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Ingredient) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type IngredientOnDb struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Titile      string                 `protobuf:"bytes,2,opt,name=titile,proto3" json:"titile,omitempty"`
	Description string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	ImageUrl    string                 `protobuf:"bytes,4,opt,name=image_url,json=imageUrl,proto3" json:"image_url,omitempty"`
	CreatedAt   *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt   *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *IngredientOnDb) Reset() {
	*x = IngredientOnDb{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ingredientRain_v1_ingredientRain_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IngredientOnDb) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IngredientOnDb) ProtoMessage() {}

func (x *IngredientOnDb) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ingredientRain_v1_ingredientRain_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IngredientOnDb.ProtoReflect.Descriptor instead.
func (*IngredientOnDb) Descriptor() ([]byte, []int) {
	return file_rpc_ingredientRain_v1_ingredientRain_proto_rawDescGZIP(), []int{1}
}

func (x *IngredientOnDb) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *IngredientOnDb) GetTitile() string {
	if x != nil {
		return x.Titile
	}
	return ""
}

func (x *IngredientOnDb) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *IngredientOnDb) GetImageUrl() string {
	if x != nil {
		return x.ImageUrl
	}
	return ""
}

func (x *IngredientOnDb) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *IngredientOnDb) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type StreamIngredientRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *StreamIngredientRequest) Reset() {
	*x = StreamIngredientRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ingredientRain_v1_ingredientRain_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamIngredientRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamIngredientRequest) ProtoMessage() {}

func (x *StreamIngredientRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ingredientRain_v1_ingredientRain_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamIngredientRequest.ProtoReflect.Descriptor instead.
func (*StreamIngredientRequest) Descriptor() ([]byte, []int) {
	return file_rpc_ingredientRain_v1_ingredientRain_proto_rawDescGZIP(), []int{2}
}

type StreamIngredientResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ingredients []*Ingredient `protobuf:"bytes,1,rep,name=ingredients,proto3" json:"ingredients,omitempty"`
}

func (x *StreamIngredientResponse) Reset() {
	*x = StreamIngredientResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ingredientRain_v1_ingredientRain_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamIngredientResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamIngredientResponse) ProtoMessage() {}

func (x *StreamIngredientResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ingredientRain_v1_ingredientRain_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamIngredientResponse.ProtoReflect.Descriptor instead.
func (*StreamIngredientResponse) Descriptor() ([]byte, []int) {
	return file_rpc_ingredientRain_v1_ingredientRain_proto_rawDescGZIP(), []int{3}
}

func (x *StreamIngredientResponse) GetIngredients() []*Ingredient {
	if x != nil {
		return x.Ingredients
	}
	return nil
}

type GetIngredientListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetIngredientListRequest) Reset() {
	*x = GetIngredientListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ingredientRain_v1_ingredientRain_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetIngredientListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetIngredientListRequest) ProtoMessage() {}

func (x *GetIngredientListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ingredientRain_v1_ingredientRain_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetIngredientListRequest.ProtoReflect.Descriptor instead.
func (*GetIngredientListRequest) Descriptor() ([]byte, []int) {
	return file_rpc_ingredientRain_v1_ingredientRain_proto_rawDescGZIP(), []int{4}
}

type GetIngredientListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ingredients []*IngredientOnDb `protobuf:"bytes,1,rep,name=ingredients,proto3" json:"ingredients,omitempty"`
}

func (x *GetIngredientListResponse) Reset() {
	*x = GetIngredientListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ingredientRain_v1_ingredientRain_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetIngredientListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetIngredientListResponse) ProtoMessage() {}

func (x *GetIngredientListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ingredientRain_v1_ingredientRain_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetIngredientListResponse.ProtoReflect.Descriptor instead.
func (*GetIngredientListResponse) Descriptor() ([]byte, []int) {
	return file_rpc_ingredientRain_v1_ingredientRain_proto_rawDescGZIP(), []int{5}
}

func (x *GetIngredientListResponse) GetIngredients() []*IngredientOnDb {
	if x != nil {
		return x.Ingredients
	}
	return nil
}

type SendIngredientsRequst struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ingredients []*Ingredient `protobuf:"bytes,1,rep,name=ingredients,proto3" json:"ingredients,omitempty"`
}

func (x *SendIngredientsRequst) Reset() {
	*x = SendIngredientsRequst{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ingredientRain_v1_ingredientRain_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendIngredientsRequst) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendIngredientsRequst) ProtoMessage() {}

func (x *SendIngredientsRequst) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ingredientRain_v1_ingredientRain_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendIngredientsRequst.ProtoReflect.Descriptor instead.
func (*SendIngredientsRequst) Descriptor() ([]byte, []int) {
	return file_rpc_ingredientRain_v1_ingredientRain_proto_rawDescGZIP(), []int{6}
}

func (x *SendIngredientsRequst) GetIngredients() []*Ingredient {
	if x != nil {
		return x.Ingredients
	}
	return nil
}

type SendIngredientsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SendIngredientsResponse) Reset() {
	*x = SendIngredientsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ingredientRain_v1_ingredientRain_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendIngredientsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendIngredientsResponse) ProtoMessage() {}

func (x *SendIngredientsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ingredientRain_v1_ingredientRain_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendIngredientsResponse.ProtoReflect.Descriptor instead.
func (*SendIngredientsResponse) Descriptor() ([]byte, []int) {
	return file_rpc_ingredientRain_v1_ingredientRain_proto_rawDescGZIP(), []int{7}
}

type CreateIngredientRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ingredient *Ingredient `protobuf:"bytes,1,opt,name=ingredient,proto3" json:"ingredient,omitempty"`
}

func (x *CreateIngredientRequest) Reset() {
	*x = CreateIngredientRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ingredientRain_v1_ingredientRain_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateIngredientRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateIngredientRequest) ProtoMessage() {}

func (x *CreateIngredientRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ingredientRain_v1_ingredientRain_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateIngredientRequest.ProtoReflect.Descriptor instead.
func (*CreateIngredientRequest) Descriptor() ([]byte, []int) {
	return file_rpc_ingredientRain_v1_ingredientRain_proto_rawDescGZIP(), []int{8}
}

func (x *CreateIngredientRequest) GetIngredient() *Ingredient {
	if x != nil {
		return x.Ingredient
	}
	return nil
}

type CreateIngredientResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *CreateIngredientResponse) Reset() {
	*x = CreateIngredientResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ingredientRain_v1_ingredientRain_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateIngredientResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateIngredientResponse) ProtoMessage() {}

func (x *CreateIngredientResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ingredientRain_v1_ingredientRain_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateIngredientResponse.ProtoReflect.Descriptor instead.
func (*CreateIngredientResponse) Descriptor() ([]byte, []int) {
	return file_rpc_ingredientRain_v1_ingredientRain_proto_rawDescGZIP(), []int{9}
}

func (x *CreateIngredientResponse) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type UpdateIngredientRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ingredient *Ingredient `protobuf:"bytes,1,opt,name=ingredient,proto3" json:"ingredient,omitempty"`
}

func (x *UpdateIngredientRequest) Reset() {
	*x = UpdateIngredientRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ingredientRain_v1_ingredientRain_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateIngredientRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateIngredientRequest) ProtoMessage() {}

func (x *UpdateIngredientRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ingredientRain_v1_ingredientRain_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateIngredientRequest.ProtoReflect.Descriptor instead.
func (*UpdateIngredientRequest) Descriptor() ([]byte, []int) {
	return file_rpc_ingredientRain_v1_ingredientRain_proto_rawDescGZIP(), []int{10}
}

func (x *UpdateIngredientRequest) GetIngredient() *Ingredient {
	if x != nil {
		return x.Ingredient
	}
	return nil
}

type UpdateIngredientResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateIngredientResponse) Reset() {
	*x = UpdateIngredientResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ingredientRain_v1_ingredientRain_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateIngredientResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateIngredientResponse) ProtoMessage() {}

func (x *UpdateIngredientResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ingredientRain_v1_ingredientRain_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateIngredientResponse.ProtoReflect.Descriptor instead.
func (*UpdateIngredientResponse) Descriptor() ([]byte, []int) {
	return file_rpc_ingredientRain_v1_ingredientRain_proto_rawDescGZIP(), []int{11}
}

type DeleteIngredientRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteIngredientRequest) Reset() {
	*x = DeleteIngredientRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ingredientRain_v1_ingredientRain_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteIngredientRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteIngredientRequest) ProtoMessage() {}

func (x *DeleteIngredientRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ingredientRain_v1_ingredientRain_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteIngredientRequest.ProtoReflect.Descriptor instead.
func (*DeleteIngredientRequest) Descriptor() ([]byte, []int) {
	return file_rpc_ingredientRain_v1_ingredientRain_proto_rawDescGZIP(), []int{12}
}

func (x *DeleteIngredientRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DeleteIngredientResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteIngredientResponse) Reset() {
	*x = DeleteIngredientResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ingredientRain_v1_ingredientRain_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteIngredientResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteIngredientResponse) ProtoMessage() {}

func (x *DeleteIngredientResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ingredientRain_v1_ingredientRain_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteIngredientResponse.ProtoReflect.Descriptor instead.
func (*DeleteIngredientResponse) Descriptor() ([]byte, []int) {
	return file_rpc_ingredientRain_v1_ingredientRain_proto_rawDescGZIP(), []int{13}
}

type Recipe struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Title            string                 `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	RecipeUrl        string                 `protobuf:"bytes,3,opt,name=recipe_url,json=recipeUrl,proto3" json:"recipe_url,omitempty"`
	ImageUrl         string                 `protobuf:"bytes,4,opt,name=image_url,json=imageUrl,proto3" json:"image_url,omitempty"`
	Pickup           bool                   `protobuf:"varint,5,opt,name=pickup,proto3" json:"pickup,omitempty"`
	Nickname         string                 `protobuf:"bytes,6,opt,name=nickname,proto3" json:"nickname,omitempty"`
	Materials        string                 `protobuf:"bytes,7,opt,name=materials,proto3" json:"materials,omitempty"`
	MaterialIds      []int64                `protobuf:"varint,8,rep,packed,name=material_ids,json=materialIds,proto3" json:"material_ids,omitempty"`
	Publishday       *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=publishday,proto3" json:"publishday,omitempty"`
	Rank             int64                  `protobuf:"varint,10,opt,name=rank,proto3" json:"rank,omitempty"`
	RecipeIndication string                 `protobuf:"bytes,11,opt,name=recipe_indication,json=recipeIndication,proto3" json:"recipe_indication,omitempty"`
	RecipeCost       string                 `protobuf:"bytes,12,opt,name=recipe_cost,json=recipeCost,proto3" json:"recipe_cost,omitempty"`
	CreatedAt        *timestamppb.Timestamp `protobuf:"bytes,13,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt        *timestamppb.Timestamp `protobuf:"bytes,14,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *Recipe) Reset() {
	*x = Recipe{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ingredientRain_v1_ingredientRain_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Recipe) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Recipe) ProtoMessage() {}

func (x *Recipe) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ingredientRain_v1_ingredientRain_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Recipe.ProtoReflect.Descriptor instead.
func (*Recipe) Descriptor() ([]byte, []int) {
	return file_rpc_ingredientRain_v1_ingredientRain_proto_rawDescGZIP(), []int{14}
}

func (x *Recipe) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Recipe) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Recipe) GetRecipeUrl() string {
	if x != nil {
		return x.RecipeUrl
	}
	return ""
}

func (x *Recipe) GetImageUrl() string {
	if x != nil {
		return x.ImageUrl
	}
	return ""
}

func (x *Recipe) GetPickup() bool {
	if x != nil {
		return x.Pickup
	}
	return false
}

func (x *Recipe) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *Recipe) GetMaterials() string {
	if x != nil {
		return x.Materials
	}
	return ""
}

func (x *Recipe) GetMaterialIds() []int64 {
	if x != nil {
		return x.MaterialIds
	}
	return nil
}

func (x *Recipe) GetPublishday() *timestamppb.Timestamp {
	if x != nil {
		return x.Publishday
	}
	return nil
}

func (x *Recipe) GetRank() int64 {
	if x != nil {
		return x.Rank
	}
	return 0
}

func (x *Recipe) GetRecipeIndication() string {
	if x != nil {
		return x.RecipeIndication
	}
	return ""
}

func (x *Recipe) GetRecipeCost() string {
	if x != nil {
		return x.RecipeCost
	}
	return ""
}

func (x *Recipe) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Recipe) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type RecipeOnDb struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                 int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Title              string                 `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	RecipeUrl          string                 `protobuf:"bytes,3,opt,name=recipe_url,json=recipeUrl,proto3" json:"recipe_url,omitempty"`
	ImageUrl           string                 `protobuf:"bytes,4,opt,name=image_url,json=imageUrl,proto3" json:"image_url,omitempty"`
	Pickup             bool                   `protobuf:"varint,5,opt,name=pickup,proto3" json:"pickup,omitempty"`
	Nickname           string                 `protobuf:"bytes,6,opt,name=nickname,proto3" json:"nickname,omitempty"`
	Materials          string                 `protobuf:"bytes,7,opt,name=materials,proto3" json:"materials,omitempty"`
	MaterialIds        string                 `protobuf:"bytes,8,opt,name=material_ids,json=materialIds,proto3" json:"material_ids,omitempty"`
	Publishday         *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=publishday,proto3" json:"publishday,omitempty"`
	Ranking            int64                  `protobuf:"varint,10,opt,name=ranking,proto3" json:"ranking,omitempty"`
	RecipeIndicationId int64                  `protobuf:"varint,11,opt,name=recipe_indication_id,json=recipeIndicationId,proto3" json:"recipe_indication_id,omitempty"`
	RecipeCostId       int64                  `protobuf:"varint,12,opt,name=recipe_cost_id,json=recipeCostId,proto3" json:"recipe_cost_id,omitempty"`
	CreatedAt          *timestamppb.Timestamp `protobuf:"bytes,13,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt          *timestamppb.Timestamp `protobuf:"bytes,14,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *RecipeOnDb) Reset() {
	*x = RecipeOnDb{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ingredientRain_v1_ingredientRain_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecipeOnDb) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecipeOnDb) ProtoMessage() {}

func (x *RecipeOnDb) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ingredientRain_v1_ingredientRain_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecipeOnDb.ProtoReflect.Descriptor instead.
func (*RecipeOnDb) Descriptor() ([]byte, []int) {
	return file_rpc_ingredientRain_v1_ingredientRain_proto_rawDescGZIP(), []int{15}
}

func (x *RecipeOnDb) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *RecipeOnDb) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *RecipeOnDb) GetRecipeUrl() string {
	if x != nil {
		return x.RecipeUrl
	}
	return ""
}

func (x *RecipeOnDb) GetImageUrl() string {
	if x != nil {
		return x.ImageUrl
	}
	return ""
}

func (x *RecipeOnDb) GetPickup() bool {
	if x != nil {
		return x.Pickup
	}
	return false
}

func (x *RecipeOnDb) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *RecipeOnDb) GetMaterials() string {
	if x != nil {
		return x.Materials
	}
	return ""
}

func (x *RecipeOnDb) GetMaterialIds() string {
	if x != nil {
		return x.MaterialIds
	}
	return ""
}

func (x *RecipeOnDb) GetPublishday() *timestamppb.Timestamp {
	if x != nil {
		return x.Publishday
	}
	return nil
}

func (x *RecipeOnDb) GetRanking() int64 {
	if x != nil {
		return x.Ranking
	}
	return 0
}

func (x *RecipeOnDb) GetRecipeIndicationId() int64 {
	if x != nil {
		return x.RecipeIndicationId
	}
	return 0
}

func (x *RecipeOnDb) GetRecipeCostId() int64 {
	if x != nil {
		return x.RecipeCostId
	}
	return 0
}

func (x *RecipeOnDb) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *RecipeOnDb) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type GetRecipeListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetRecipeListRequest) Reset() {
	*x = GetRecipeListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ingredientRain_v1_ingredientRain_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRecipeListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRecipeListRequest) ProtoMessage() {}

func (x *GetRecipeListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ingredientRain_v1_ingredientRain_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRecipeListRequest.ProtoReflect.Descriptor instead.
func (*GetRecipeListRequest) Descriptor() ([]byte, []int) {
	return file_rpc_ingredientRain_v1_ingredientRain_proto_rawDescGZIP(), []int{16}
}

type GetRecipeListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Recipes []*Recipe `protobuf:"bytes,1,rep,name=recipes,proto3" json:"recipes,omitempty"`
}

func (x *GetRecipeListResponse) Reset() {
	*x = GetRecipeListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ingredientRain_v1_ingredientRain_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRecipeListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRecipeListResponse) ProtoMessage() {}

func (x *GetRecipeListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ingredientRain_v1_ingredientRain_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRecipeListResponse.ProtoReflect.Descriptor instead.
func (*GetRecipeListResponse) Descriptor() ([]byte, []int) {
	return file_rpc_ingredientRain_v1_ingredientRain_proto_rawDescGZIP(), []int{17}
}

func (x *GetRecipeListResponse) GetRecipes() []*Recipe {
	if x != nil {
		return x.Recipes
	}
	return nil
}

type SearchRecipesByIngredientsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ingredients []*Ingredient `protobuf:"bytes,1,rep,name=ingredients,proto3" json:"ingredients,omitempty"`
}

func (x *SearchRecipesByIngredientsRequest) Reset() {
	*x = SearchRecipesByIngredientsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ingredientRain_v1_ingredientRain_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchRecipesByIngredientsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchRecipesByIngredientsRequest) ProtoMessage() {}

func (x *SearchRecipesByIngredientsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ingredientRain_v1_ingredientRain_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchRecipesByIngredientsRequest.ProtoReflect.Descriptor instead.
func (*SearchRecipesByIngredientsRequest) Descriptor() ([]byte, []int) {
	return file_rpc_ingredientRain_v1_ingredientRain_proto_rawDescGZIP(), []int{18}
}

func (x *SearchRecipesByIngredientsRequest) GetIngredients() []*Ingredient {
	if x != nil {
		return x.Ingredients
	}
	return nil
}

type SearchRecipesByIngredientResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Recipes []*Recipe `protobuf:"bytes,1,rep,name=recipes,proto3" json:"recipes,omitempty"`
}

func (x *SearchRecipesByIngredientResponse) Reset() {
	*x = SearchRecipesByIngredientResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ingredientRain_v1_ingredientRain_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchRecipesByIngredientResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchRecipesByIngredientResponse) ProtoMessage() {}

func (x *SearchRecipesByIngredientResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ingredientRain_v1_ingredientRain_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchRecipesByIngredientResponse.ProtoReflect.Descriptor instead.
func (*SearchRecipesByIngredientResponse) Descriptor() ([]byte, []int) {
	return file_rpc_ingredientRain_v1_ingredientRain_proto_rawDescGZIP(), []int{19}
}

func (x *SearchRecipesByIngredientResponse) GetRecipes() []*Recipe {
	if x != nil {
		return x.Recipes
	}
	return nil
}

type CreateRecipesByBatchRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Recipes []*RecipeOnDb `protobuf:"bytes,1,rep,name=recipes,proto3" json:"recipes,omitempty"`
}

func (x *CreateRecipesByBatchRequest) Reset() {
	*x = CreateRecipesByBatchRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ingredientRain_v1_ingredientRain_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateRecipesByBatchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRecipesByBatchRequest) ProtoMessage() {}

func (x *CreateRecipesByBatchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ingredientRain_v1_ingredientRain_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRecipesByBatchRequest.ProtoReflect.Descriptor instead.
func (*CreateRecipesByBatchRequest) Descriptor() ([]byte, []int) {
	return file_rpc_ingredientRain_v1_ingredientRain_proto_rawDescGZIP(), []int{20}
}

func (x *CreateRecipesByBatchRequest) GetRecipes() []*RecipeOnDb {
	if x != nil {
		return x.Recipes
	}
	return nil
}

type CreateRecipesByBatchResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error *string `protobuf:"bytes,1,opt,name=error,proto3,oneof" json:"error,omitempty"`
}

func (x *CreateRecipesByBatchResponse) Reset() {
	*x = CreateRecipesByBatchResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ingredientRain_v1_ingredientRain_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateRecipesByBatchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRecipesByBatchResponse) ProtoMessage() {}

func (x *CreateRecipesByBatchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ingredientRain_v1_ingredientRain_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRecipesByBatchResponse.ProtoReflect.Descriptor instead.
func (*CreateRecipesByBatchResponse) Descriptor() ([]byte, []int) {
	return file_rpc_ingredientRain_v1_ingredientRain_proto_rawDescGZIP(), []int{21}
}

func (x *CreateRecipesByBatchResponse) GetError() string {
	if x != nil && x.Error != nil {
		return *x.Error
	}
	return ""
}

type UpdateRecipeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Recipe *Recipe `protobuf:"bytes,1,opt,name=recipe,proto3" json:"recipe,omitempty"`
}

func (x *UpdateRecipeRequest) Reset() {
	*x = UpdateRecipeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ingredientRain_v1_ingredientRain_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateRecipeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRecipeRequest) ProtoMessage() {}

func (x *UpdateRecipeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ingredientRain_v1_ingredientRain_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRecipeRequest.ProtoReflect.Descriptor instead.
func (*UpdateRecipeRequest) Descriptor() ([]byte, []int) {
	return file_rpc_ingredientRain_v1_ingredientRain_proto_rawDescGZIP(), []int{22}
}

func (x *UpdateRecipeRequest) GetRecipe() *Recipe {
	if x != nil {
		return x.Recipe
	}
	return nil
}

type UpdateRecipeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateRecipeResponse) Reset() {
	*x = UpdateRecipeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ingredientRain_v1_ingredientRain_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateRecipeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRecipeResponse) ProtoMessage() {}

func (x *UpdateRecipeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ingredientRain_v1_ingredientRain_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRecipeResponse.ProtoReflect.Descriptor instead.
func (*UpdateRecipeResponse) Descriptor() ([]byte, []int) {
	return file_rpc_ingredientRain_v1_ingredientRain_proto_rawDescGZIP(), []int{23}
}

type DeleteRecipeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteRecipeRequest) Reset() {
	*x = DeleteRecipeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ingredientRain_v1_ingredientRain_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteRecipeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRecipeRequest) ProtoMessage() {}

func (x *DeleteRecipeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ingredientRain_v1_ingredientRain_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRecipeRequest.ProtoReflect.Descriptor instead.
func (*DeleteRecipeRequest) Descriptor() ([]byte, []int) {
	return file_rpc_ingredientRain_v1_ingredientRain_proto_rawDescGZIP(), []int{24}
}

func (x *DeleteRecipeRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DeleteRecipeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteRecipeResponse) Reset() {
	*x = DeleteRecipeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ingredientRain_v1_ingredientRain_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteRecipeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRecipeResponse) ProtoMessage() {}

func (x *DeleteRecipeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ingredientRain_v1_ingredientRain_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRecipeResponse.ProtoReflect.Descriptor instead.
func (*DeleteRecipeResponse) Descriptor() ([]byte, []int) {
	return file_rpc_ingredientRain_v1_ingredientRain_proto_rawDescGZIP(), []int{25}
}

var File_rpc_ingredientRain_v1_ingredientRain_proto protoreflect.FileDescriptor

var file_rpc_ingredientRain_v1_ingredientRain_proto_rawDesc = []byte{
	0x0a, 0x2a, 0x72, 0x70, 0x63, 0x2f, 0x69, 0x6e, 0x67, 0x72, 0x65, 0x64, 0x69, 0x65, 0x6e, 0x74,
	0x52, 0x61, 0x69, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x69, 0x6e, 0x67, 0x72, 0x65, 0x64, 0x69, 0x65,
	0x6e, 0x74, 0x52, 0x61, 0x69, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x15, 0x72, 0x70,
	0x63, 0x2e, 0x69, 0x6e, 0x67, 0x72, 0x65, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x61, 0x69, 0x6e,
	0x2e, 0x76, 0x31, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0xfb, 0x01, 0x0a, 0x0a, 0x49, 0x6e, 0x67, 0x72, 0x65, 0x64, 0x69,
	0x65, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x20, 0x0a,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x1b, 0x0a, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x39, 0x0a, 0x0a,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x22, 0xed, 0x01, 0x0a, 0x0e, 0x49, 0x6e, 0x67, 0x72, 0x65, 0x64, 0x69, 0x65, 0x6e,
	0x74, 0x4f, 0x6e, 0x44, 0x62, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x69, 0x74, 0x69, 0x6c, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x69, 0x74, 0x69, 0x6c, 0x65, 0x12, 0x20, 0x0a,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x1b, 0x0a, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x39, 0x0a, 0x0a,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x22, 0x19, 0x0a, 0x17, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x49, 0x6e, 0x67, 0x72,
	0x65, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x5f, 0x0a,
	0x18, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x49, 0x6e, 0x67, 0x72, 0x65, 0x64, 0x69, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x43, 0x0a, 0x0b, 0x69, 0x6e, 0x67,
	0x72, 0x65, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21,
	0x2e, 0x72, 0x70, 0x63, 0x2e, 0x69, 0x6e, 0x67, 0x72, 0x65, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x52,
	0x61, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x67, 0x72, 0x65, 0x64, 0x69, 0x65, 0x6e,
	0x74, 0x52, 0x0b, 0x69, 0x6e, 0x67, 0x72, 0x65, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x1a,
	0x0a, 0x18, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x67, 0x72, 0x65, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x64, 0x0a, 0x19, 0x47, 0x65,
	0x74, 0x49, 0x6e, 0x67, 0x72, 0x65, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x47, 0x0a, 0x0b, 0x69, 0x6e, 0x67, 0x72, 0x65,
	0x64, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x72,
	0x70, 0x63, 0x2e, 0x69, 0x6e, 0x67, 0x72, 0x65, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x61, 0x69,
	0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x67, 0x72, 0x65, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x4f,
	0x6e, 0x44, 0x62, 0x52, 0x0b, 0x69, 0x6e, 0x67, 0x72, 0x65, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x73,
	0x22, 0x5c, 0x0a, 0x15, 0x53, 0x65, 0x6e, 0x64, 0x49, 0x6e, 0x67, 0x72, 0x65, 0x64, 0x69, 0x65,
	0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x73, 0x74, 0x12, 0x43, 0x0a, 0x0b, 0x69, 0x6e, 0x67,
	0x72, 0x65, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21,
	0x2e, 0x72, 0x70, 0x63, 0x2e, 0x69, 0x6e, 0x67, 0x72, 0x65, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x52,
	0x61, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x67, 0x72, 0x65, 0x64, 0x69, 0x65, 0x6e,
	0x74, 0x52, 0x0b, 0x69, 0x6e, 0x67, 0x72, 0x65, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x19,
	0x0a, 0x17, 0x53, 0x65, 0x6e, 0x64, 0x49, 0x6e, 0x67, 0x72, 0x65, 0x64, 0x69, 0x65, 0x6e, 0x74,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x5c, 0x0a, 0x17, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x49, 0x6e, 0x67, 0x72, 0x65, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x41, 0x0a, 0x0a, 0x69, 0x6e, 0x67, 0x72, 0x65, 0x64, 0x69, 0x65,
	0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x69,
	0x6e, 0x67, 0x72, 0x65, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x61, 0x69, 0x6e, 0x2e, 0x76, 0x31,
	0x2e, 0x49, 0x6e, 0x67, 0x72, 0x65, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x0a, 0x69, 0x6e, 0x67,
	0x72, 0x65, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x22, 0x2a, 0x0a, 0x18, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x49, 0x6e, 0x67, 0x72, 0x65, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x69, 0x64, 0x22, 0x5c, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x67,
	0x72, 0x65, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x41,
	0x0a, 0x0a, 0x69, 0x6e, 0x67, 0x72, 0x65, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x21, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x69, 0x6e, 0x67, 0x72, 0x65, 0x64, 0x69,
	0x65, 0x6e, 0x74, 0x52, 0x61, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x67, 0x72, 0x65,
	0x64, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x0a, 0x69, 0x6e, 0x67, 0x72, 0x65, 0x64, 0x69, 0x65, 0x6e,
	0x74, 0x22, 0x1a, 0x0a, 0x18, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x67, 0x72, 0x65,
	0x64, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x29, 0x0a,
	0x17, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x6e, 0x67, 0x72, 0x65, 0x64, 0x69, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x1a, 0x0a, 0x18, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x49, 0x6e, 0x67, 0x72, 0x65, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0xf3, 0x03, 0x0a, 0x06, 0x52, 0x65, 0x63, 0x69, 0x70, 0x65, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x63, 0x69, 0x70, 0x65, 0x5f,
	0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x63, 0x69, 0x70,
	0x65, 0x55, 0x72, 0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x72,
	0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72,
	0x6c, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x69, 0x63, 0x6b, 0x75, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x06, 0x70, 0x69, 0x63, 0x6b, 0x75, 0x70, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63,
	0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63,
	0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61,
	0x6c, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69,
	0x61, 0x6c, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5f,
	0x69, 0x64, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x03, 0x52, 0x0b, 0x6d, 0x61, 0x74, 0x65, 0x72,
	0x69, 0x61, 0x6c, 0x49, 0x64, 0x73, 0x12, 0x3a, 0x0a, 0x0a, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73,
	0x68, 0x64, 0x61, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x64,
	0x61, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x12, 0x2b, 0x0a, 0x11, 0x72, 0x65, 0x63, 0x69, 0x70, 0x65,
	0x5f, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x10, 0x72, 0x65, 0x63, 0x69, 0x70, 0x65, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x63, 0x69, 0x70, 0x65, 0x5f, 0x63, 0x6f,
	0x73, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x63, 0x69, 0x70, 0x65,
	0x43, 0x6f, 0x73, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x61, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12,
	0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0e, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x87, 0x04, 0x0a, 0x0a, 0x52,
	0x65, 0x63, 0x69, 0x70, 0x65, 0x4f, 0x6e, 0x44, 0x62, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12,
	0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x63, 0x69, 0x70, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x63, 0x69, 0x70, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x1b,
	0x0a, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x70,
	0x69, 0x63, 0x6b, 0x75, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x70, 0x69, 0x63,
	0x6b, 0x75, 0x70, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x1c, 0x0a, 0x09, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x73, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x73, 0x12, 0x21, 0x0a,
	0x0c, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x49, 0x64, 0x73,
	0x12, 0x3a, 0x0a, 0x0a, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x64, 0x61, 0x79, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x0a, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x64, 0x61, 0x79, 0x12, 0x18, 0x0a, 0x07,
	0x72, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x72,
	0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x12, 0x30, 0x0a, 0x14, 0x72, 0x65, 0x63, 0x69, 0x70, 0x65,
	0x5f, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x12, 0x72, 0x65, 0x63, 0x69, 0x70, 0x65, 0x49, 0x6e, 0x64, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0e, 0x72, 0x65, 0x63, 0x69,
	0x70, 0x65, 0x5f, 0x63, 0x6f, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0c, 0x72, 0x65, 0x63, 0x69, 0x70, 0x65, 0x43, 0x6f, 0x73, 0x74, 0x49, 0x64, 0x12, 0x39,
	0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x22, 0x16, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x69, 0x70,
	0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x50, 0x0a, 0x15,
	0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x69, 0x70, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x07, 0x72, 0x65, 0x63, 0x69, 0x70, 0x65, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x69, 0x6e, 0x67,
	0x72, 0x65, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x61, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x52,
	0x65, 0x63, 0x69, 0x70, 0x65, 0x52, 0x07, 0x72, 0x65, 0x63, 0x69, 0x70, 0x65, 0x73, 0x22, 0x68,
	0x0a, 0x21, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x63, 0x69, 0x70, 0x65, 0x73, 0x42,
	0x79, 0x49, 0x6e, 0x67, 0x72, 0x65, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x43, 0x0a, 0x0b, 0x69, 0x6e, 0x67, 0x72, 0x65, 0x64, 0x69, 0x65, 0x6e,
	0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x69,
	0x6e, 0x67, 0x72, 0x65, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x61, 0x69, 0x6e, 0x2e, 0x76, 0x31,
	0x2e, 0x49, 0x6e, 0x67, 0x72, 0x65, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x0b, 0x69, 0x6e, 0x67,
	0x72, 0x65, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x5c, 0x0a, 0x21, 0x53, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x52, 0x65, 0x63, 0x69, 0x70, 0x65, 0x73, 0x42, 0x79, 0x49, 0x6e, 0x67, 0x72, 0x65,
	0x64, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a,
	0x07, 0x72, 0x65, 0x63, 0x69, 0x70, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d,
	0x2e, 0x72, 0x70, 0x63, 0x2e, 0x69, 0x6e, 0x67, 0x72, 0x65, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x52,
	0x61, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x63, 0x69, 0x70, 0x65, 0x52, 0x07, 0x72,
	0x65, 0x63, 0x69, 0x70, 0x65, 0x73, 0x22, 0x5a, 0x0a, 0x1b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x63, 0x69, 0x70, 0x65, 0x73, 0x42, 0x79, 0x42, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3b, 0x0a, 0x07, 0x72, 0x65, 0x63, 0x69, 0x70, 0x65, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x69, 0x6e, 0x67,
	0x72, 0x65, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x61, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x52,
	0x65, 0x63, 0x69, 0x70, 0x65, 0x4f, 0x6e, 0x44, 0x62, 0x52, 0x07, 0x72, 0x65, 0x63, 0x69, 0x70,
	0x65, 0x73, 0x22, 0x43, 0x0a, 0x1c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x63, 0x69,
	0x70, 0x65, 0x73, 0x42, 0x79, 0x42, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x19, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x88, 0x01, 0x01, 0x42, 0x08, 0x0a,
	0x06, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x4c, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x63, 0x69, 0x70, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x35,
	0x0a, 0x06, 0x72, 0x65, 0x63, 0x69, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d,
	0x2e, 0x72, 0x70, 0x63, 0x2e, 0x69, 0x6e, 0x67, 0x72, 0x65, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x52,
	0x61, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x63, 0x69, 0x70, 0x65, 0x52, 0x06, 0x72,
	0x65, 0x63, 0x69, 0x70, 0x65, 0x22, 0x16, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x63, 0x69, 0x70, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x25, 0x0a,
	0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x63, 0x69, 0x70, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x02, 0x69, 0x64, 0x22, 0x16, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65,
	0x63, 0x69, 0x70, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0xde, 0x05, 0x0a,
	0x11, 0x49, 0x6e, 0x67, 0x72, 0x65, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x77, 0x0a, 0x10, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x49, 0x6e, 0x67, 0x72,
	0x65, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x2e, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x69, 0x6e, 0x67,
	0x72, 0x65, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x61, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x49, 0x6e, 0x67, 0x72, 0x65, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x69, 0x6e, 0x67,
	0x72, 0x65, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x61, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x49, 0x6e, 0x67, 0x72, 0x65, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x30, 0x01, 0x12, 0x78, 0x0a, 0x11, 0x47,
	0x65, 0x74, 0x49, 0x6e, 0x67, 0x72, 0x65, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x2f, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x69, 0x6e, 0x67, 0x72, 0x65, 0x64, 0x69, 0x65, 0x6e,
	0x74, 0x52, 0x61, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x67, 0x72,
	0x65, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x30, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x69, 0x6e, 0x67, 0x72, 0x65, 0x64, 0x69, 0x65,
	0x6e, 0x74, 0x52, 0x61, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x67,
	0x72, 0x65, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x71, 0x0a, 0x0f, 0x53, 0x65, 0x6e, 0x64, 0x49, 0x6e, 0x67,
	0x72, 0x65, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x2c, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x69,
	0x6e, 0x67, 0x72, 0x65, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x61, 0x69, 0x6e, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x65, 0x6e, 0x64, 0x49, 0x6e, 0x67, 0x72, 0x65, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x69, 0x6e, 0x67,
	0x72, 0x65, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x61, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x65, 0x6e, 0x64, 0x49, 0x6e, 0x67, 0x72, 0x65, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x75, 0x0a, 0x10, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x49, 0x6e, 0x67, 0x72, 0x65, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x2e, 0x2e, 0x72,
	0x70, 0x63, 0x2e, 0x69, 0x6e, 0x67, 0x72, 0x65, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x61, 0x69,
	0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x67, 0x72, 0x65,
	0x64, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x72,
	0x70, 0x63, 0x2e, 0x69, 0x6e, 0x67, 0x72, 0x65, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x61, 0x69,
	0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x67, 0x72, 0x65,
	0x64, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x75, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x67, 0x72, 0x65, 0x64, 0x69,
	0x65, 0x6e, 0x74, 0x12, 0x2e, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x69, 0x6e, 0x67, 0x72, 0x65, 0x64,
	0x69, 0x65, 0x6e, 0x74, 0x52, 0x61, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x49, 0x6e, 0x67, 0x72, 0x65, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x69, 0x6e, 0x67, 0x72, 0x65, 0x64,
	0x69, 0x65, 0x6e, 0x74, 0x52, 0x61, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x49, 0x6e, 0x67, 0x72, 0x65, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x75, 0x0a, 0x10, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x49, 0x6e, 0x67, 0x72, 0x65, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x2e, 0x2e, 0x72, 0x70, 0x63,
	0x2e, 0x69, 0x6e, 0x67, 0x72, 0x65, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x61, 0x69, 0x6e, 0x2e,
	0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x6e, 0x67, 0x72, 0x65, 0x64, 0x69,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x72, 0x70, 0x63,
	0x2e, 0x69, 0x6e, 0x67, 0x72, 0x65, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x61, 0x69, 0x6e, 0x2e,
	0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x6e, 0x67, 0x72, 0x65, 0x64, 0x69,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x32, 0xec, 0x04,
	0x0a, 0x0d, 0x52, 0x65, 0x63, 0x69, 0x70, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x6c, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x69, 0x70, 0x65, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x2b, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x69, 0x6e, 0x67, 0x72, 0x65, 0x64, 0x69, 0x65, 0x6e,
	0x74, 0x52, 0x61, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x69,
	0x70, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e,
	0x72, 0x70, 0x63, 0x2e, 0x69, 0x6e, 0x67, 0x72, 0x65, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x61,
	0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x69, 0x70, 0x65, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x92, 0x01,
	0x0a, 0x1a, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x63, 0x69, 0x70, 0x65, 0x73, 0x42,
	0x79, 0x49, 0x6e, 0x67, 0x72, 0x65, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x38, 0x2e, 0x72,
	0x70, 0x63, 0x2e, 0x69, 0x6e, 0x67, 0x72, 0x65, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x61, 0x69,
	0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x63, 0x69, 0x70,
	0x65, 0x73, 0x42, 0x79, 0x49, 0x6e, 0x67, 0x72, 0x65, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x38, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x69, 0x6e, 0x67,
	0x72, 0x65, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x61, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x63, 0x69, 0x70, 0x65, 0x73, 0x42, 0x79, 0x49, 0x6e,
	0x67, 0x72, 0x65, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x81, 0x01, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x63,
	0x69, 0x70, 0x65, 0x73, 0x42, 0x79, 0x42, 0x61, 0x74, 0x63, 0x68, 0x12, 0x32, 0x2e, 0x72, 0x70,
	0x63, 0x2e, 0x69, 0x6e, 0x67, 0x72, 0x65, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x61, 0x69, 0x6e,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x63, 0x69, 0x70, 0x65,
	0x73, 0x42, 0x79, 0x42, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x33, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x69, 0x6e, 0x67, 0x72, 0x65, 0x64, 0x69, 0x65, 0x6e, 0x74,
	0x52, 0x61, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x63, 0x69, 0x70, 0x65, 0x73, 0x42, 0x79, 0x42, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x69, 0x0a, 0x0c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x63, 0x69, 0x70, 0x65, 0x12, 0x2a, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x69, 0x6e, 0x67,
	0x72, 0x65, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x61, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x63, 0x69, 0x70, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x69, 0x6e, 0x67, 0x72, 0x65, 0x64, 0x69,
	0x65, 0x6e, 0x74, 0x52, 0x61, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x63, 0x69, 0x70, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x69, 0x0a, 0x0c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x63, 0x69, 0x70,
	0x65, 0x12, 0x2a, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x69, 0x6e, 0x67, 0x72, 0x65, 0x64, 0x69, 0x65,
	0x6e, 0x74, 0x52, 0x61, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x52, 0x65, 0x63, 0x69, 0x70, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e,
	0x72, 0x70, 0x63, 0x2e, 0x69, 0x6e, 0x67, 0x72, 0x65, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x61,
	0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x63, 0x69,
	0x70, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x41, 0x5a, 0x3f,
	0x74, 0x6f, 0x66, 0x75, 0x5f, 0x69, 0x6e, 0x5f, 0x68, 0x61, 0x6d, 0x62, 0x75, 0x72, 0x67, 0x65,
	0x72, 0x5f, 0x62, 0x65, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x72, 0x70, 0x63, 0x2f, 0x69, 0x6e, 0x67,
	0x72, 0x65, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x61, 0x69, 0x6e, 0x2f, 0x76, 0x31, 0x3b, 0x69,
	0x6e, 0x67, 0x72, 0x65, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x61, 0x69, 0x6e, 0x76, 0x31, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_rpc_ingredientRain_v1_ingredientRain_proto_rawDescOnce sync.Once
	file_rpc_ingredientRain_v1_ingredientRain_proto_rawDescData = file_rpc_ingredientRain_v1_ingredientRain_proto_rawDesc
)

func file_rpc_ingredientRain_v1_ingredientRain_proto_rawDescGZIP() []byte {
	file_rpc_ingredientRain_v1_ingredientRain_proto_rawDescOnce.Do(func() {
		file_rpc_ingredientRain_v1_ingredientRain_proto_rawDescData = protoimpl.X.CompressGZIP(file_rpc_ingredientRain_v1_ingredientRain_proto_rawDescData)
	})
	return file_rpc_ingredientRain_v1_ingredientRain_proto_rawDescData
}

var file_rpc_ingredientRain_v1_ingredientRain_proto_msgTypes = make([]protoimpl.MessageInfo, 26)
var file_rpc_ingredientRain_v1_ingredientRain_proto_goTypes = []interface{}{
	(*Ingredient)(nil),                        // 0: rpc.ingredientRain.v1.Ingredient
	(*IngredientOnDb)(nil),                    // 1: rpc.ingredientRain.v1.IngredientOnDb
	(*StreamIngredientRequest)(nil),           // 2: rpc.ingredientRain.v1.StreamIngredientRequest
	(*StreamIngredientResponse)(nil),          // 3: rpc.ingredientRain.v1.StreamIngredientResponse
	(*GetIngredientListRequest)(nil),          // 4: rpc.ingredientRain.v1.GetIngredientListRequest
	(*GetIngredientListResponse)(nil),         // 5: rpc.ingredientRain.v1.GetIngredientListResponse
	(*SendIngredientsRequst)(nil),             // 6: rpc.ingredientRain.v1.SendIngredientsRequst
	(*SendIngredientsResponse)(nil),           // 7: rpc.ingredientRain.v1.SendIngredientsResponse
	(*CreateIngredientRequest)(nil),           // 8: rpc.ingredientRain.v1.CreateIngredientRequest
	(*CreateIngredientResponse)(nil),          // 9: rpc.ingredientRain.v1.CreateIngredientResponse
	(*UpdateIngredientRequest)(nil),           // 10: rpc.ingredientRain.v1.UpdateIngredientRequest
	(*UpdateIngredientResponse)(nil),          // 11: rpc.ingredientRain.v1.UpdateIngredientResponse
	(*DeleteIngredientRequest)(nil),           // 12: rpc.ingredientRain.v1.DeleteIngredientRequest
	(*DeleteIngredientResponse)(nil),          // 13: rpc.ingredientRain.v1.DeleteIngredientResponse
	(*Recipe)(nil),                            // 14: rpc.ingredientRain.v1.Recipe
	(*RecipeOnDb)(nil),                        // 15: rpc.ingredientRain.v1.RecipeOnDb
	(*GetRecipeListRequest)(nil),              // 16: rpc.ingredientRain.v1.GetRecipeListRequest
	(*GetRecipeListResponse)(nil),             // 17: rpc.ingredientRain.v1.GetRecipeListResponse
	(*SearchRecipesByIngredientsRequest)(nil), // 18: rpc.ingredientRain.v1.SearchRecipesByIngredientsRequest
	(*SearchRecipesByIngredientResponse)(nil), // 19: rpc.ingredientRain.v1.SearchRecipesByIngredientResponse
	(*CreateRecipesByBatchRequest)(nil),       // 20: rpc.ingredientRain.v1.CreateRecipesByBatchRequest
	(*CreateRecipesByBatchResponse)(nil),      // 21: rpc.ingredientRain.v1.CreateRecipesByBatchResponse
	(*UpdateRecipeRequest)(nil),               // 22: rpc.ingredientRain.v1.UpdateRecipeRequest
	(*UpdateRecipeResponse)(nil),              // 23: rpc.ingredientRain.v1.UpdateRecipeResponse
	(*DeleteRecipeRequest)(nil),               // 24: rpc.ingredientRain.v1.DeleteRecipeRequest
	(*DeleteRecipeResponse)(nil),              // 25: rpc.ingredientRain.v1.DeleteRecipeResponse
	(*timestamppb.Timestamp)(nil),             // 26: google.protobuf.Timestamp
}
var file_rpc_ingredientRain_v1_ingredientRain_proto_depIdxs = []int32{
	26, // 0: rpc.ingredientRain.v1.Ingredient.created_at:type_name -> google.protobuf.Timestamp
	26, // 1: rpc.ingredientRain.v1.Ingredient.updated_at:type_name -> google.protobuf.Timestamp
	26, // 2: rpc.ingredientRain.v1.IngredientOnDb.created_at:type_name -> google.protobuf.Timestamp
	26, // 3: rpc.ingredientRain.v1.IngredientOnDb.updated_at:type_name -> google.protobuf.Timestamp
	0,  // 4: rpc.ingredientRain.v1.StreamIngredientResponse.ingredients:type_name -> rpc.ingredientRain.v1.Ingredient
	1,  // 5: rpc.ingredientRain.v1.GetIngredientListResponse.ingredients:type_name -> rpc.ingredientRain.v1.IngredientOnDb
	0,  // 6: rpc.ingredientRain.v1.SendIngredientsRequst.ingredients:type_name -> rpc.ingredientRain.v1.Ingredient
	0,  // 7: rpc.ingredientRain.v1.CreateIngredientRequest.ingredient:type_name -> rpc.ingredientRain.v1.Ingredient
	0,  // 8: rpc.ingredientRain.v1.UpdateIngredientRequest.ingredient:type_name -> rpc.ingredientRain.v1.Ingredient
	26, // 9: rpc.ingredientRain.v1.Recipe.publishday:type_name -> google.protobuf.Timestamp
	26, // 10: rpc.ingredientRain.v1.Recipe.created_at:type_name -> google.protobuf.Timestamp
	26, // 11: rpc.ingredientRain.v1.Recipe.updated_at:type_name -> google.protobuf.Timestamp
	26, // 12: rpc.ingredientRain.v1.RecipeOnDb.publishday:type_name -> google.protobuf.Timestamp
	26, // 13: rpc.ingredientRain.v1.RecipeOnDb.created_at:type_name -> google.protobuf.Timestamp
	26, // 14: rpc.ingredientRain.v1.RecipeOnDb.updated_at:type_name -> google.protobuf.Timestamp
	14, // 15: rpc.ingredientRain.v1.GetRecipeListResponse.recipes:type_name -> rpc.ingredientRain.v1.Recipe
	0,  // 16: rpc.ingredientRain.v1.SearchRecipesByIngredientsRequest.ingredients:type_name -> rpc.ingredientRain.v1.Ingredient
	14, // 17: rpc.ingredientRain.v1.SearchRecipesByIngredientResponse.recipes:type_name -> rpc.ingredientRain.v1.Recipe
	15, // 18: rpc.ingredientRain.v1.CreateRecipesByBatchRequest.recipes:type_name -> rpc.ingredientRain.v1.RecipeOnDb
	14, // 19: rpc.ingredientRain.v1.UpdateRecipeRequest.recipe:type_name -> rpc.ingredientRain.v1.Recipe
	2,  // 20: rpc.ingredientRain.v1.IngredientService.StreamIngredient:input_type -> rpc.ingredientRain.v1.StreamIngredientRequest
	4,  // 21: rpc.ingredientRain.v1.IngredientService.GetIngredientList:input_type -> rpc.ingredientRain.v1.GetIngredientListRequest
	6,  // 22: rpc.ingredientRain.v1.IngredientService.SendIngredients:input_type -> rpc.ingredientRain.v1.SendIngredientsRequst
	8,  // 23: rpc.ingredientRain.v1.IngredientService.CreateIngredient:input_type -> rpc.ingredientRain.v1.CreateIngredientRequest
	10, // 24: rpc.ingredientRain.v1.IngredientService.UpdateIngredient:input_type -> rpc.ingredientRain.v1.UpdateIngredientRequest
	12, // 25: rpc.ingredientRain.v1.IngredientService.DeleteIngredient:input_type -> rpc.ingredientRain.v1.DeleteIngredientRequest
	16, // 26: rpc.ingredientRain.v1.RecipeService.GetRecipeList:input_type -> rpc.ingredientRain.v1.GetRecipeListRequest
	18, // 27: rpc.ingredientRain.v1.RecipeService.SearchRecipesByIngredients:input_type -> rpc.ingredientRain.v1.SearchRecipesByIngredientsRequest
	20, // 28: rpc.ingredientRain.v1.RecipeService.CreateRecipesByBatch:input_type -> rpc.ingredientRain.v1.CreateRecipesByBatchRequest
	22, // 29: rpc.ingredientRain.v1.RecipeService.UpdateRecipe:input_type -> rpc.ingredientRain.v1.UpdateRecipeRequest
	24, // 30: rpc.ingredientRain.v1.RecipeService.DeleteRecipe:input_type -> rpc.ingredientRain.v1.DeleteRecipeRequest
	3,  // 31: rpc.ingredientRain.v1.IngredientService.StreamIngredient:output_type -> rpc.ingredientRain.v1.StreamIngredientResponse
	5,  // 32: rpc.ingredientRain.v1.IngredientService.GetIngredientList:output_type -> rpc.ingredientRain.v1.GetIngredientListResponse
	7,  // 33: rpc.ingredientRain.v1.IngredientService.SendIngredients:output_type -> rpc.ingredientRain.v1.SendIngredientsResponse
	9,  // 34: rpc.ingredientRain.v1.IngredientService.CreateIngredient:output_type -> rpc.ingredientRain.v1.CreateIngredientResponse
	11, // 35: rpc.ingredientRain.v1.IngredientService.UpdateIngredient:output_type -> rpc.ingredientRain.v1.UpdateIngredientResponse
	13, // 36: rpc.ingredientRain.v1.IngredientService.DeleteIngredient:output_type -> rpc.ingredientRain.v1.DeleteIngredientResponse
	17, // 37: rpc.ingredientRain.v1.RecipeService.GetRecipeList:output_type -> rpc.ingredientRain.v1.GetRecipeListResponse
	19, // 38: rpc.ingredientRain.v1.RecipeService.SearchRecipesByIngredients:output_type -> rpc.ingredientRain.v1.SearchRecipesByIngredientResponse
	21, // 39: rpc.ingredientRain.v1.RecipeService.CreateRecipesByBatch:output_type -> rpc.ingredientRain.v1.CreateRecipesByBatchResponse
	23, // 40: rpc.ingredientRain.v1.RecipeService.UpdateRecipe:output_type -> rpc.ingredientRain.v1.UpdateRecipeResponse
	25, // 41: rpc.ingredientRain.v1.RecipeService.DeleteRecipe:output_type -> rpc.ingredientRain.v1.DeleteRecipeResponse
	31, // [31:42] is the sub-list for method output_type
	20, // [20:31] is the sub-list for method input_type
	20, // [20:20] is the sub-list for extension type_name
	20, // [20:20] is the sub-list for extension extendee
	0,  // [0:20] is the sub-list for field type_name
}

func init() { file_rpc_ingredientRain_v1_ingredientRain_proto_init() }
func file_rpc_ingredientRain_v1_ingredientRain_proto_init() {
	if File_rpc_ingredientRain_v1_ingredientRain_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_rpc_ingredientRain_v1_ingredientRain_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Ingredient); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ingredientRain_v1_ingredientRain_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IngredientOnDb); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ingredientRain_v1_ingredientRain_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamIngredientRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ingredientRain_v1_ingredientRain_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamIngredientResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ingredientRain_v1_ingredientRain_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetIngredientListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ingredientRain_v1_ingredientRain_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetIngredientListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ingredientRain_v1_ingredientRain_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendIngredientsRequst); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ingredientRain_v1_ingredientRain_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendIngredientsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ingredientRain_v1_ingredientRain_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateIngredientRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ingredientRain_v1_ingredientRain_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateIngredientResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ingredientRain_v1_ingredientRain_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateIngredientRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ingredientRain_v1_ingredientRain_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateIngredientResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ingredientRain_v1_ingredientRain_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteIngredientRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ingredientRain_v1_ingredientRain_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteIngredientResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ingredientRain_v1_ingredientRain_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Recipe); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ingredientRain_v1_ingredientRain_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecipeOnDb); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ingredientRain_v1_ingredientRain_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRecipeListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ingredientRain_v1_ingredientRain_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRecipeListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ingredientRain_v1_ingredientRain_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchRecipesByIngredientsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ingredientRain_v1_ingredientRain_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchRecipesByIngredientResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ingredientRain_v1_ingredientRain_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateRecipesByBatchRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ingredientRain_v1_ingredientRain_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateRecipesByBatchResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ingredientRain_v1_ingredientRain_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateRecipeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ingredientRain_v1_ingredientRain_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateRecipeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ingredientRain_v1_ingredientRain_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteRecipeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ingredientRain_v1_ingredientRain_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteRecipeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_rpc_ingredientRain_v1_ingredientRain_proto_msgTypes[21].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_rpc_ingredientRain_v1_ingredientRain_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   26,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_rpc_ingredientRain_v1_ingredientRain_proto_goTypes,
		DependencyIndexes: file_rpc_ingredientRain_v1_ingredientRain_proto_depIdxs,
		MessageInfos:      file_rpc_ingredientRain_v1_ingredientRain_proto_msgTypes,
	}.Build()
	File_rpc_ingredientRain_v1_ingredientRain_proto = out.File
	file_rpc_ingredientRain_v1_ingredientRain_proto_rawDesc = nil
	file_rpc_ingredientRain_v1_ingredientRain_proto_goTypes = nil
	file_rpc_ingredientRain_v1_ingredientRain_proto_depIdxs = nil
}
