syntax = "proto3";

package rpc.ingredientRain.v1;

import "google/protobuf/timestamp.proto";

option go_package = "tofu_in_hamburger_be/gen/rpc/ingredientRain/v1;ingredientRainv1";

service IngredientService {
  rpc StreamIngredient(StreamIngredientRequest) returns (stream StreamIngredientResponse) {}
  rpc GetIngredientList(GetIngredientListRequest) returns (GetIngredientListResponse) {}
  rpc SendIngredients(SendIngredientsRequst) returns (SendIngredientsResponse) {}
  rpc CreateIngredient(CreateIngredientRequest) returns (CreateIngredientResponse) {}
  rpc UpdateIngredient(UpdateIngredientRequest) returns (UpdateIngredientResponse) {}
  rpc DeleteIngredient(DeleteIngredientRequest) returns (DeleteIngredientResponse) {}
}

message Ingredient {
  int64 id = 1;
  string uuid = 7;
  string titile = 2;
  string description = 3;
  string image_url = 4;
  google.protobuf.Timestamp created_at = 5;
  google.protobuf.Timestamp updated_at = 6;
}

message IngredientOnDb {
  int64 id = 1;
  string titile = 2;
  string description = 3;
  string image_url = 4;
  google.protobuf.Timestamp created_at = 5;
  google.protobuf.Timestamp updated_at = 6;
}

message StreamIngredientRequest {}

message StreamIngredientResponse {
  repeated Ingredient ingredients = 1; 
}

message GetIngredientListRequest {}

message GetIngredientListResponse {
  repeated Ingredient ingredients = 1;
}

message SendIngredientsRequst {
  repeated Ingredient ingredients = 1;
}

message SendIngredientsResponse {}

message CreateIngredientRequest {
  Ingredient ingredient = 1;
}

message CreateIngredientResponse {
  int64 id = 1;
}

message UpdateIngredientRequest {
  Ingredient ingredient = 1;
}

message UpdateIngredientResponse {}

message DeleteIngredientRequest {
  int64 id = 1;
}

message DeleteIngredientResponse {}





service RecipeService {
  rpc GetRecipeList(GetRecipeListRequest) returns (GetRecipeListResponse) {}
  rpc SearchRecipesByIngredients(SearchRecipesByIngredientsRequest) returns (SearchRecipesByIngredientResponse) {}
  rpc CreateRecipesByBatch(CreateRecipesByBatchRequest) returns (CreateRecipesByBatchResponse) {}
  rpc UpdateRecipe(UpdateRecipeRequest) returns (UpdateRecipeResponse) {}
  rpc DeleteRecipe(DeleteRecipeRequest) returns (DeleteRecipeResponse) {}
}

message Recipe {
  int64 id = 1;
  string title = 2;
  string recipe_url = 3;
  string image_url = 4;
  bool pickup = 5;
  string nickname = 6;
  string materials = 7;
  repeated int64 material_ids = 8;
  google.protobuf.Timestamp publishday = 9;
  int64 rank = 10;
  string recipe_indication = 11;
  string recipe_cost = 12;
  google.protobuf.Timestamp created_at = 13;
  google.protobuf.Timestamp updated_at = 14;
}

message RecipeOnDb {
  int64 id = 1;
  string title = 2;
  string recipe_url = 3;
  string image_url = 4;
  bool pickup = 5;
  string nickname = 6;
  string materials = 7;
  string material_ids = 8;
  google.protobuf.Timestamp publishday = 9;
  int64 ranking = 10;
  int64 recipe_indication_id = 11;
  int64 recipe_cost_id = 12;
  google.protobuf.Timestamp created_at = 13;
  google.protobuf.Timestamp updated_at = 14;
}

message GetRecipeListRequest {}

message GetRecipeListResponse {
  repeated Recipe recipes = 1;
}

message SearchRecipesByIngredientsRequest {
  repeated Ingredient ingredients = 1;
}

message SearchRecipesByIngredientResponse {
  repeated Recipe recipes = 1;
}  

message CreateRecipesByBatchRequest {
  repeated RecipeOnDb recipes = 1;
}

message CreateRecipesByBatchResponse {
  optional string error = 1;
}

message UpdateRecipeRequest {
  Recipe recipe = 1;
}

message UpdateRecipeResponse {}

message DeleteRecipeRequest {
  int64 id = 1;
}

message DeleteRecipeResponse {}
